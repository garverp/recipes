#!/usr/bin/python

# Create a new header file (and eventually modify existing ones)
# PWG 10.15.2014
from gnuradio import gr
from gnuradio import blocks
from gnuradio import eng_notation
from analysis import mkheader
from gnuradio.eng_option import eng_option
from optparse import OptionParser


def get_options():
    usage = "%prog: [options] header_filename"
    parser = OptionParser(option_class=eng_option, usage=usage)
    parser.add_option("-r", "--sample-rate", type="eng_float", default=1e6,
                     help="Set sample rate")
    parser.add_option("-v", "--verbose", action="store_true", default=False,
                     help="Verbose output [default=%default]")
    parser.add_option("-w", "--time-sec", type="long", default=0,
                     help="Whole Second Timestamp [default=%default]")
    parser.add_option("-s", "--time-fsec", type="eng_float", default=0.0,
                     help="Fractional Sec Timestamp [default=%default]")
    parser.add_option("-t", "--format", type="choice", default="sc16",
                     choices=['b8','fc32','sc16'],
                     help="Item data type [default=%default]")
    parser.add_option("-l", "--length", type="eng_float", default=1e6,
                     help="Length of Data in samples [default=%default]")
    parser.add_option("-f", "--freq", type="eng_float",
            help="Set Frequency [default=%default]")
    parser.add_option("-S", "--seg-size", type="eng_float", default=1e6,
            help="Segment Size of data b/t headers [default=%default]")
    (options, args) = parser.parse_args()
    if len(args) != 1:
        parser.print_help()
        raise SystemExit(1)
    return (options, args[0])

if __name__=='__main__':
    (options, filename) = get_options()
    mkheader.make_header(options, filename)

  
